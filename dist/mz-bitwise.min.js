/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var x=Object.defineProperty;var c=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,B=Object.prototype.propertyIsEnumerable;var a=(r,e,t)=>e in r?x(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,n=(r,e)=>{for(var t in e||(e={}))w.call(e,t)&&a(r,t,e[t]);if(c)for(var t of c(e))B.call(e,t)&&a(r,t,e[t]);return r};var o=(r,e)=>{for(var t in e)x(r,t,{get:e[t],enumerable:!0})};var s={};o(s,{convertToUInt32:()=>l,getBinaryString:()=>f,parseBinaryString:()=>I});var f=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return(r>>>0).toString(2)},I=r=>parseInt(r,2),l=r=>r>>>0;var u={};o(u,{addition:()=>g,divideBy2:()=>y,divideBy2PowerN:()=>N,multiplyBy2:()=>d,multiplyBy2PowerN:()=>S,subtraction:()=>k,toggleSign:()=>h});var d=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<1},S=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<e},y=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>1},N=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>e},h=r=>~r+1,g=(r,e)=>{for(;e!==0;){let t=r&e;r=r^e,e=t<<1}return r},k=(r,e)=>(e=~e+1,g(r,e));var i={};o(i,{getLSB:()=>E,removeLSB:()=>F,setLSB:()=>M,unsetLSB:()=>v});var E=r=>r&1,F=r=>r>>1,M=r=>r|1,v=r=>r&-2;var m={};o(m,{getMSB:()=>P,setMSB:()=>A,unsetMSB:()=>L});var P=r=>r<0?1:0,A=r=>r|2147483648,L=r=>r&2147483647;var b={};o(b,{invertBits:()=>T,isBitSetAtPosition:()=>U,setBitAtPosition:()=>z,toggleBitAtPosition:()=>O,unsetBitAtPosition:()=>q});var z=(r,e)=>{let t=1<<e;return r|t},q=(r,e)=>{let t=~(1<<e);return r&t},O=(r,e)=>{let t=1<<e;return r^t},T=r=>~r,U=(r,e)=>{let t=1<<e;return(r&t)!==0};var p={};o(p,{isEquals:()=>C,isEven:()=>W,isOdd:()=>j});var W=r=>(r&1)===0,j=r=>(r&1)===1,C=(r,e)=>{if(!Number.isInteger(r)||!Number.isInteger(e))throw new Error("Input must be an integer.");return(r^e)===0};var D=n(n(n(n(n(n({},s),u),i),m),b),p);window.mzBitwise=window.mzBitwise||D;})();
