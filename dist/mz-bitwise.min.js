/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var s=Object.defineProperty;var t=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var w=(a,i,o)=>i in a?s(a,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[i]=o,n=(a,i)=>{for(var o in i||(i={}))r.call(i,o)&&w(a,o,i[o]);if(t)for(var o of t(i))m.call(i,o)&&w(a,o,i[o]);return a};var p=(a,i)=>{for(var o in i)s(a,o,{get:i[o],enumerable:!0})};var e={};p(e,{aaa:()=>c});var c=()=>{console.log("aaa")};var l=n({},e);window.mzBitwise=window.mzBitwise||l;})();
