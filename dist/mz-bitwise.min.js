/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var g=Object.defineProperty;var a=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var x=(r,e,t)=>e in r?g(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,n=(r,e)=>{for(var t in e||(e={}))w.call(e,t)&&x(r,t,e[t]);if(a)for(var t of a(e))f.call(e,t)&&x(r,t,e[t]);return r};var o=(r,e)=>{for(var t in e)g(r,t,{get:e[t],enumerable:!0})};var s={};o(s,{convertToUInt32:()=>I,getBinaryString:()=>B,parseBinaryString:()=>l});var B=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return(r>>>0).toString(2)},l=r=>parseInt(r,2),I=r=>r>>>0;var u={};o(u,{addition:()=>i,divideBy2:()=>y,divideBy2PowerN:()=>h,multiplication:()=>E,multiplyBy2:()=>d,multiplyBy2PowerN:()=>S,subtraction:()=>k,toggleSign:()=>N});var d=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<1},S=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<e},y=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>1},h=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>e},N=r=>~r+1,i=(r,e)=>{for(;e!==0;){let t=r&e;r=r^e,e=t<<1}return r},k=(r,e)=>(e=~e+1,i(r,e)),E=(r,e)=>{let t=0;for(;e!==0;)(e&1)===1&&(t=i(t,r)),e>>=1,r<<=1;return t};var m={};o(m,{getLSB:()=>F,removeLSB:()=>M,setLSB:()=>v,unsetLSB:()=>P});var F=r=>r&1,M=r=>r>>1,v=r=>r|1,P=r=>r&-2;var b={};o(b,{getMSB:()=>A,setMSB:()=>L,unsetMSB:()=>z});var A=r=>r<0?1:0,L=r=>r|2147483648,z=r=>r&2147483647;var p={};o(p,{invertBits:()=>U,isBitSetAtPosition:()=>W,setBitAtPosition:()=>q,toggleBitAtPosition:()=>T,unsetBitAtPosition:()=>O});var q=(r,e)=>{let t=1<<e;return r|t},O=(r,e)=>{let t=~(1<<e);return r&t},T=(r,e)=>{let t=1<<e;return r^t},U=r=>~r,W=(r,e)=>{let t=1<<e;return(r&t)!==0};var c={};o(c,{isEquals:()=>D,isEven:()=>j,isOdd:()=>C});var j=r=>(r&1)===0,C=r=>(r&1)===1,D=(r,e)=>{if(!Number.isInteger(r)||!Number.isInteger(e))throw new Error("Input must be an integer.");return(r^e)===0};var G=n(n(n(n(n(n({},s),u),m),b),p),c);window.mzBitwise=window.mzBitwise||G;})();
