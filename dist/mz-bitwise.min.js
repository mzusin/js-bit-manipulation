/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var s=Object.defineProperty;var n=Object.getOwnPropertySymbols;var a=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var r=(e,o,i)=>o in e?s(e,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[o]=i,w=(e,o)=>{for(var i in o||(o={}))a.call(o,i)&&r(e,i,o[i]);if(n)for(var i of n(o))m.call(o,i)&&r(e,i,o[i]);return e};var p=(e,o)=>{for(var i in o)s(e,i,{get:o[i],enumerable:!0})};var t={};p(t,{isEven:()=>b,isOdd:()=>d});var b=e=>(e&1)===0,d=e=>(e&1)===1;var c=w({},t);window.mzBitwise=window.mzBitwise||c;})();
