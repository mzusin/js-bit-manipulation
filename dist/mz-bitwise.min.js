/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var g=Object.defineProperty;var a=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var x=(r,e,t)=>e in r?g(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,n=(r,e)=>{for(var t in e||(e={}))w.call(e,t)&&x(r,t,e[t]);if(a)for(var t of a(e))f.call(e,t)&&x(r,t,e[t]);return r};var o=(r,e)=>{for(var t in e)g(r,t,{get:e[t],enumerable:!0})};var s={};o(s,{convertToUInt32:()=>I,getBinaryString:()=>B,parseBinaryString:()=>l,swap:()=>d,xor:()=>S});var B=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return(r>>>0).toString(2)},l=r=>parseInt(r,2),I=r=>r>>>0,d=(r,e)=>(r^=e,e^=r,r^=e,[r,e]),S=(r,e)=>(r|e)-(r&e);var u={};o(u,{addition:()=>i,divideBy2:()=>N,divideBy2PowerN:()=>k,multiplication:()=>M,multiplyBy2:()=>y,multiplyBy2PowerN:()=>h,subtraction:()=>F,toggleSign:()=>E});var y=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<1},h=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<e},N=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>1},k=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>e},E=r=>~r+1,i=(r,e)=>{for(;e!==0;){let t=r&e;r=r^e,e=t<<1}return r},F=(r,e)=>(e=~e+1,i(r,e)),M=(r,e)=>{let t=0;for(;e!==0;)(e&1)===1&&(t=i(t,r)),e>>=1,r<<=1;return t};var b={};o(b,{getLSB:()=>v,removeLSB:()=>P,setLSB:()=>A,unsetLSB:()=>L});var v=r=>r&1,P=r=>r>>1,A=r=>r|1,L=r=>r&-2;var m={};o(m,{getMSB:()=>z,setMSB:()=>q,unsetMSB:()=>O});var z=r=>r<0?1:0,q=r=>r|2147483648,O=r=>r&2147483647;var p={};o(p,{invertBits:()=>j,isBitSetAtPosition:()=>C,setBitAtPosition:()=>T,toggleBitAtPosition:()=>W,unsetBitAtPosition:()=>U});var T=(r,e)=>{let t=1<<e;return r|t},U=(r,e)=>{let t=~(1<<e);return r&t},W=(r,e)=>{let t=1<<e;return r^t},j=r=>~r,C=(r,e)=>{let t=1<<e;return(r&t)!==0};var c={};o(c,{isEquals:()=>H,isEven:()=>D,isOdd:()=>G});var D=r=>(r&1)===0,G=r=>(r&1)===1,H=(r,e)=>{if(!Number.isInteger(r)||!Number.isInteger(e))throw new Error("Input must be an integer.");return(r^e)===0};var J=n(n(n(n(n(n({},s),u),b),m),p),c);window.mzBitwise=window.mzBitwise||J;})();
