/* 
Bit Manipulation in JavaScript v1.0.0
A collection of bit manipulation helpers written TypeScript.
https://github.com/mzusin/js-bit-manipulation
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var x=Object.defineProperty;var c=Object.getOwnPropertySymbols;var g=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable;var a=(r,e,t)=>e in r?x(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,n=(r,e)=>{for(var t in e||(e={}))g.call(e,t)&&a(r,t,e[t]);if(c)for(var t of c(e))w.call(e,t)&&a(r,t,e[t]);return r};var o=(r,e)=>{for(var t in e)x(r,t,{get:e[t],enumerable:!0})};var s={};o(s,{convertToUInt32:()=>I,getBinaryString:()=>B,parseBinaryString:()=>f});var B=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return(r>>>0).toString(2)},f=r=>parseInt(r,2),I=r=>r>>>0;var i={};o(i,{addition:()=>h,divideBy2:()=>S,divideBy2PowerN:()=>y,multiplyBy2:()=>l,multiplyBy2PowerN:()=>d,toggleSign:()=>N});var l=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<1},d=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r<<e},S=r=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>1},y=(r,e)=>{if(!Number.isInteger(r))throw new Error("Input must be an integer.");return r>>e},N=r=>~r+1,h=(r,e)=>{for(;e!==0;){let t=r&e;r=r^e,e=t<<1}return r};var m={};o(m,{getLSB:()=>k,removeLSB:()=>E,setLSB:()=>F,unsetLSB:()=>M});var k=r=>r&1,E=r=>r>>1,F=r=>r|1,M=r=>r&-2;var u={};o(u,{getMSB:()=>v,setMSB:()=>P,unsetMSB:()=>A});var v=r=>r<0?1:0,P=r=>r|2147483648,A=r=>r&2147483647;var b={};o(b,{invertBits:()=>O,isBitSetAtPosition:()=>T,setBitAtPosition:()=>L,toggleBitAtPosition:()=>q,unsetBitAtPosition:()=>z});var L=(r,e)=>{let t=1<<e;return r|t},z=(r,e)=>{let t=~(1<<e);return r&t},q=(r,e)=>{let t=1<<e;return r^t},O=r=>~r,T=(r,e)=>{let t=1<<e;return(r&t)!==0};var p={};o(p,{isEquals:()=>j,isEven:()=>U,isOdd:()=>W});var U=r=>(r&1)===0,W=r=>(r&1)===1,j=(r,e)=>{if(!Number.isInteger(r)||!Number.isInteger(e))throw new Error("Input must be an integer.");return(r^e)===0};var C=n(n(n(n(n(n({},s),i),m),u),b),p);window.mzBitwise=window.mzBitwise||C;})();
